@model MVC_Login.Models.Usuario

@{
    ViewBag.Title = "Create";
}

<h2>Ingresar Usuario</h2>
@* Aquí agregamos una sección para mostrar el mensaje de error si existe *@
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}
@{
    bool isLoggedAdmin = HttpContext.Current.Session["Sesion1"] != null;
}
@if (isLoggedAdmin)
{

    using (Html.BeginForm("IngresarUsuarioPost", "Home", FormMethod.Post, new { @class = "row g-3", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nombres, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password_usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password_usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password_usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.direccion_residencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.direccion_residencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.direccion_residencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado_extranjero, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.estado_extranjero)
                        @Html.ValidationMessageFor(model => model.estado_extranjero, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">

            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-secondary" />
                </div>
            </div>
        </div>
    }
}
else
            {
                <h1>Acceso solo para personal autorizado</h1>
            }
    <div>
        @Html.ActionLink("Regresa a el panel", "PanelDeControlGet")
    </div>
